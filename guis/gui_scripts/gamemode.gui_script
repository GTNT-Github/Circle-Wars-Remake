local druid = require("druid.druid")
friend_spawn = nil
enemy_spawn = nil
friend_speed = nil
enemy_speed = nil
player_speed = nil
win_points = nil
loose_points = nil

function init(self)
	msg.post("#", "disable")
	defos.toggle_fullscreen()
	self.druid = druid.new(self)
	friend_spawn = self.druid:new_slider("friend_spawn_pin", vmath.vector3(95, 0, 0), function(_, value)
		gui.set_text(gui.get_node("friend_spawn_text"), math.ceil(value * 9+1))
		friend_spawn_value = math.ceil(value * 9+1)
	end)

	enemy_spawn = self.druid:new_slider("enemy_spawn_pin", vmath.vector3(95, 0, 0), function(_, value)
		gui.set_text(gui.get_node("enemy_spawn_text"), math.ceil(value * 9+1))
		enemy_spawn_value = math.ceil(value * 9+1)
	end)

	friend_speed = self.druid:new_slider("friend_speed_pin", vmath.vector3(95, 0, 0), function(_, value)
		gui.set_text(gui.get_node("friend_speed_text"), math.ceil(value * 300+200))
		friend_speed_value = math.ceil(value * 300+200)
	end)

	enemy_speed = self.druid:new_slider("enemy_speed_pin", vmath.vector3(95, 0, 0), function(_, value)
		gui.set_text(gui.get_node("enemy_speed_text"), math.ceil(value * 300+200))
		enemy_speed_value = math.ceil(value * 300+200)
	end)

	player_speed = self.druid:new_slider("player_speed_pin", vmath.vector3(95, 0, 0), function(_, value)
		if value == 1 then
			gui.set_text(gui.get_node("player_speed_text"), "Instant")
			player_speed_value = "Instant"
		elseif value < 1 then
			gui.set_text(gui.get_node("player_speed_text"), math.ceil(value * 301+200))
			player_speed_value = math.ceil(value * 301+200)
		end
	end)

	win_points = self.druid:new_slider("win_points_pin", vmath.vector3(95, 0, 0), function(_, value)
		gui.set_text(gui.get_node("win_points_text"), math.ceil(value * 39+1))
		win_points_value = math.ceil(value*39+1)
	end)

	loose_points = self.druid:new_slider("loose_points_pin", vmath.vector3(95, 0, 0), function(_, value)
		gui.set_text(gui.get_node("loose_points_text"), math.ceil(value*39+1)*-1)
		loose_points_value = math.ceil(value*39+1)*-1
	end)


	friend_spawn:set(0)
	enemy_spawn:set(0)
	friend_speed:set(0)
	enemy_speed:set(0)
	player_speed:set(1)
	win_points:set(0.48717948717)
	loose_points:set(0.48717948717)
	gui.set_text(gui.get_node("player_speed_text"), "Instant")
end


function final(self)
	self.druid:final()
end


function update(self, dt)
	self.druid:update(dt)
end
function on_message(self, message_id, message, sender)
	self.druid:on_message(message_id, message, sender)
end


function on_input(self, action_id, action)
	if action.pressed then
		if gui.is_enabled(gui.get_node("background")) then
			if action_id == hash("touch") and action.pressed then -- <2>
				local easy_button = gui.get_node("easy_preset") -- <3>
				local medium_button = gui.get_node("medium_preset") -- <3>
				local hard_button = gui.get_node("hard_preset") -- <3>
				local hardcore_button = gui.get_node("hardcore_preset") -- <3>

				if gui.pick_node(easy_button, action.x, action.y) then -- <5>
					friend_spawn:set(0)
					enemy_spawn:set(0.33333333333)
					friend_speed:set(0.5)
					enemy_speed:set(0)
					player_speed:set(1)
					win_points:set(0.48717948717)
					loose_points:set(0.48717948717)
				elseif gui.pick_node(medium_button, action.x, action.y) then
					friend_spawn:set(0.11111111111)
					enemy_spawn:set(0.22222222222)
					friend_speed:set(0)
					enemy_speed:set(0)
					player_speed:set(1)
					win_points:set(0.48717948717)
					loose_points:set(0.48717948717)
				elseif gui.pick_node(hard_button, action.x, action.y) then
					friend_spawn:set(0.22222222222)
					enemy_spawn:set(0.11111111111)
					friend_speed:set(0)
					enemy_speed:set(0)
					player_speed:set(0.49833887043)
					win_points:set(0.48717948717)
					loose_points:set(0.48717948717)
				elseif gui.pick_node(hardcore_button, action.x, action.y) then
					friend_spawn:set(0.33333333333)
					enemy_spawn:set(0)
					friend_speed:set(0)
					enemy_speed:set(0.5)
					player_speed:set(0.49833887043)
					win_points:set(0.48717948717)
					loose_points:set(0)
				elseif gui.pick_node(gui.get_node("begin_game"), action.x, action.y) then
					msg.post("/background#backend", "begin_game")
					msg.post("#", "disable")
				end
			end
		end
	end
	return self.druid:on_input(action_id, action)
end
