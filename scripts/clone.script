go.property("id", 0)

local function delete()
	go.delete()
end

local sprite = {"friend", "enemy"}
local value = {friend_speed_value, enemy_speed_value}
function init(self)
	local duration = (vmath.length(go.get_position()-go.get_position("/player")))/value[self.id]
	go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, go.get_position("/player"), go.EASING_LINEAR, duration, 0, ai_move)
	msg.post(".", "acquire_input_focus")
	msg.post("#clone", "play_animation", {id = hash(sprite[self.id])})
	go.set("#clone","tint.w", 0.5)
	timer.delay(10, false, delete)
end

function on_input(self, action_id, action)
	if action.x and action.y then
		local duration = (vmath.length(go.get_position()-go.get_position("/player")))/value[self.id]
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, go.get_position("/player"), go.EASING_LINEAR, duration, 0)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		if message.other_id == hash("/player") then
			if self.id == 1 then
				points = points+1
				sound.play("#friend_sound")
				particlefx.play("#friend_particle")
			elseif self.id == 2 then
				points = points-1
				sound.play("#enemy_sound")
				particlefx.play("#enemy_particle")
			end
			go.delete()
		end
	end
end